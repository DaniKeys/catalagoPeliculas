public class Main {

	 public static void main(String[] args){
	    	
	        List<Pelicula> peliculas = new ArrayList<>();
	        peliculas.add(new Pelicula("E.T.", "Steven Spielberg", 1982));
	        peliculas.add(new Pelicula("Avatar", "James Cameron", 2009));
	        peliculas.add(new Pelicula("Salvar al soldado Ryan", "Steven Spielberg", 1998));
	        peliculas.add(new Pelicula("Origen", "Christopher Nolan", 2010));
	        peliculas.add(new Pelicula("L.A. Confidential", "Curtis Hanson", 1997));
	        
	        //Obtener un sublistado con las películas estrenadas en el siglo XXI (a partir del año 2000, inclusive)
	        List<Pelicula> estrenosAge =
	        					peliculas.stream().filter(p -> p.getEstreno() >= 2000)
	        					.collect(Collectors.toList());
	     
	        estrenosAge.forEach(x-> System.out.println(x));
	        
	        //Mostrar por pantalla, separados por comas, los títulos de las películas de Steven Spielberg					
	        String listaDeSS = peliculas.stream()
	        					.filter(a -> a.getDirector().equals("Steven Spielberg"))
	        					.map(t -> t.getTitulo())
	        					.collect(Collectors.joining(", ",
                                                        "Nombres peliculas Steven Spilberg: ", ""));
	        
	        System.out.println(listaDeSS);
	        
	       //Obtener un sublistado con los nombres de las películas, ordenados alfabéticamente
	        List<String> orderAsc = peliculas.stream()	
	        								.map(p -> p.getTitulo())	
	        								.sorted((p1,p2) -> p1.compareTo(p2))
	                                                                        .collect(Collectors.toList());	
	        
	        orderAsc.forEach(x-> System.out.println(x));
	        
	       //Mostrar por pantalla el estreno más reciente
	        Optional<Pelicula> mayor = peliculas.stream()
	                                            .max((p1, p2) -> Integer.compare(p1.getEstreno(), p2.getEstreno()));
	        String isPresent1 = (mayor.isPresent()) ? String.valueOf(mayor.get()) : "No se han encontrado peliculas que cumplan el requisito";
	        
	        System.out.println(isPresent1);
	        
	    }
	
	
}
